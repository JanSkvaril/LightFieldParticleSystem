cmake_minimum_required(VERSION 3.9)
project(LIGHT_FIELD_PS)
set(CMAKE_CXX_STANDARD 19)   
set(CMAKE_CXX_FLAGS_RELEASE "/Gy")
if (MSVC) 
    add_compile_options(/MP16) # set compile parallel
endif()




# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_SHARED  OFF CACHE BOOL " " FORCE)
# you could add the NANOGUI_BUILD_SHARED part here

# Add the configurations from nanogui
add_subdirectory(include/nanogui)  # this executes ext/nanogui/CMakeLists.txt for you

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(include/nanogui/include) # make sure you have this
include_directories(${NANOGUI_EXTRA_INCS}) # where GLFW, Eigen, etc come from

add_subdirectory(include/glm)
add_subdirectory(include/assimp)

#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")  
add_executable(light_field_ps_bp src/main.cpp
    src/shader.h
    src/shader.cpp
    src/particle.h
    src/particle.cpp
    src/particle_emitter.h
    src/particle_emitter.cpp
    src/texture.h
    src/texture.cpp
    src/model.h
    src/model.cpp
    src/model_vertex.h
    src/generator.h
    src/generator.cpp
    src/generator_texture.cpp
    src/generator_texture.h
    src/text_rectangle.h
    src/text_rectangle.cpp
    src/camera.h
    src/camera.cpp
    src/ui_manager.h
    src/ui_manager.cpp
    src/ui_settings.h
    src/particle_params.h
    src/generator_params.h
    src/angle_cachetable.h
    src/angle_cachetable.cpp
    src/skybox.h
    src/skybox.cpp
    src/generator_store.h
    src/generator_store.cpp
    src/particle_leaf.h
    src/particle_leaf.cpp
    src/lightfield_ps_demo.h
    src/lightfield_ps_demo.cpp)




target_link_libraries(light_field_ps_bp  nanogui ${NANOGUI_EXTRA_LIBS})
target_link_libraries(light_field_ps_bp glm)
target_link_libraries(light_field_ps_bp assimp)





# run target
add_custom_target(run-ex1
    COMMAND light_field_ps_bp 
    DEPENDS light_field_ps_bp 
    WORKING_DIRECTORY ${CMAKE_PROJECT_DIR}
)


add_custom_target(copy_assets
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_LIST_DIR}/assets ${CMAKE_CURRENT_BINARY_DIR}/
        )
add_dependencies(light_field_ps_bp copy_assets)
